{
	"info": {
		"_postman_id": "853c67b9-e999-4ca8-8eb5-cdebc91020d4",
		"name": "TaskManager testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "18451230"
	},
	"item": [
		{
			"name": "Get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expected = []\r",
							"\r",
							"pm.test(pm.info.requestName, function () {\r",
							"    let usersData = pm.response.json();\r",
							"    pm.expect(expected).eql(usersData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(function(){}, 5000);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "192.168.56.3:8080/api/v1/users?limit=550&offset=0",
					"host": [
						"192",
						"168",
						"56",
						"3"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "limit",
							"value": "550"
						},
						{
							"key": "offset",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(pm.info.requestName, function () {\r",
							"    let responseData = pm.response.json();\r",
							"    pm.expect(1).eql(responseData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"passportNumber\":\"1234 567890\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "192.168.56.3:8080/api/v1/users"
			},
			"response": []
		},
		{
			"name": "Get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expected = [\r",
							"  {\r",
							"    passportNumber: '1234 567890',\r",
							"    surname: 'Иванов',\r",
							"    name: 'Иван',\r",
							"    patronymic: 'Иванович',\r",
							"    address: 'г. Москва, ул. Ленина, д. 5, кв. 1'\r",
							"  }\r",
							"]\r",
							"\r",
							"pm.test(pm.info.requestName, function () {\r",
							"    let usersData = pm.response.json();\r",
							"    pm.expect(expected).eql(usersData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "192.168.56.3:8080/api/v1/users?limit=5555&offset=0",
					"host": [
						"192",
						"168",
						"56",
						"3"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "limit",
							"value": "5555"
						},
						{
							"key": "offset",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(pm.info.requestName, function () {\r",
							"    let responseData = pm.response.json();\r",
							"    pm.expect(2).eql(responseData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"passportNumber\":\"0000 111222\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "192.168.56.3:8080/api/v1/users"
			},
			"response": []
		},
		{
			"name": "Create task 1 for user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(pm.info.requestName, function () {\r",
							"    let responseData = pm.response.json();\r",
							"    pm.expect(1).eql(responseData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"userId\":1, \"description\":\"Task 1\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "192.168.56.3:8080/api/v1/tasks"
			},
			"response": []
		},
		{
			"name": "Create task 2 for user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(pm.info.requestName, function () {\r",
							"    let responseData = pm.response.json();\r",
							"    pm.expect(2).eql(responseData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"userId\":1, \"description\":\"Task 2\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "192.168.56.3:8080/api/v1/tasks"
			},
			"response": []
		},
		{
			"name": "Create task 3 for user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(pm.info.requestName, function () {\r",
							"    let responseData = pm.response.json();\r",
							"    pm.expect(3).eql(responseData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"userId\":2, \"description\":\"Task 3\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "192.168.56.3:8080/api/v1/tasks"
			},
			"response": []
		},
		{
			"name": "Create task 4 for user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(pm.info.requestName, function () {\r",
							"    let responseData = pm.response.json();\r",
							"    pm.expect(4).eql(responseData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"userId\":2, \"description\":\"Task 4\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "192.168.56.3:8080/api/v1/tasks"
			},
			"response": []
		},
		{
			"name": "Get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expected = [\r",
							"  {\r",
							"    passportNumber: '1234 567890',\r",
							"    surname: 'Иванов',\r",
							"    name: 'Иван',\r",
							"    patronymic: 'Иванович',\r",
							"    address: 'г. Москва, ул. Ленина, д. 5, кв. 1'\r",
							"  },\r",
							"  {\r",
							"    passportNumber: '0000 111222',\r",
							"    surname: 'Иванов',\r",
							"    name: 'Иван',\r",
							"    patronymic: 'Иванович',\r",
							"    address: 'г. Москва, ул. Ленина, д. 5, кв. 1'\r",
							"  }\r",
							"]\r",
							"\r",
							"pm.test(pm.info.requestName, function () {\r",
							"    let usersData = pm.response.json();\r",
							"    pm.expect(expected).eql(usersData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "192.168.56.3:8080/api/v1/users?limit=5555&offset=0",
					"host": [
						"192",
						"168",
						"56",
						"3"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "limit",
							"value": "5555"
						},
						{
							"key": "offset",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all users with passport 1234 567890",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expected = [\r",
							"  {\r",
							"    passportNumber: '1234 567890',\r",
							"    surname: 'Иванов',\r",
							"    name: 'Иван',\r",
							"    patronymic: 'Иванович',\r",
							"    address: 'г. Москва, ул. Ленина, д. 5, кв. 1'\r",
							"  }\r",
							"]\r",
							"\r",
							"pm.test(pm.info.requestName, function () {\r",
							"    let usersData = pm.response.json();\r",
							"    pm.expect(expected).eql(usersData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "192.168.56.3:8080/api/v1/users?limit=5555&offset=0&filters=passportNumber=1234 567890",
					"host": [
						"192",
						"168",
						"56",
						"3"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "limit",
							"value": "5555"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "filters",
							"value": "passportNumber=1234 567890"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all users with passport 0000 111222",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expected = [\r",
							"  {\r",
							"    passportNumber: '0000 111222',\r",
							"    surname: 'Иванов',\r",
							"    name: 'Иван',\r",
							"    patronymic: 'Иванович',\r",
							"    address: 'г. Москва, ул. Ленина, д. 5, кв. 1'\r",
							"  }\r",
							"]\r",
							"\r",
							"pm.test(pm.info.requestName, function () {\r",
							"    let usersData = pm.response.json();\r",
							"    pm.expect(expected).eql(usersData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "192.168.56.3:8080/api/v1/users?limit=5555&offset=0&filters=passportNumber=0000 111222",
					"host": [
						"192",
						"168",
						"56",
						"3"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "limit",
							"value": "5555"
						},
						{
							"key": "offset",
							"value": "0"
						},
						{
							"key": "filters",
							"value": "passportNumber=0000 111222"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get only first user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expected = [\r",
							"  {\r",
							"    passportNumber: '1234 567890',\r",
							"    surname: 'Иванов',\r",
							"    name: 'Иван',\r",
							"    patronymic: 'Иванович',\r",
							"    address: 'г. Москва, ул. Ленина, д. 5, кв. 1'\r",
							"  }\r",
							"]\r",
							"\r",
							"pm.test(pm.info.requestName, function () {\r",
							"    let usersData = pm.response.json();\r",
							"    pm.expect(expected).eql(usersData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "192.168.56.3:8080/api/v1/users?limit=1&offset=0",
					"host": [
						"192",
						"168",
						"56",
						"3"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "limit",
							"value": "1"
						},
						{
							"key": "offset",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get only second user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expected = [\r",
							"  {\r",
							"    passportNumber: '0000 111222',\r",
							"    surname: 'Иванов',\r",
							"    name: 'Иван',\r",
							"    patronymic: 'Иванович',\r",
							"    address: 'г. Москва, ул. Ленина, д. 5, кв. 1'\r",
							"  }\r",
							"]\r",
							"\r",
							"pm.test(pm.info.requestName, function () {\r",
							"    let usersData = pm.response.json();\r",
							"    pm.expect(expected).eql(usersData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "192.168.56.3:8080/api/v1/users?limit=1&offset=1",
					"host": [
						"192",
						"168",
						"56",
						"3"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "limit",
							"value": "1"
						},
						{
							"key": "offset",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get empty set of users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expected = []\r",
							"\r",
							"pm.test(pm.info.requestName, function () {\r",
							"    let usersData = pm.response.json();\r",
							"    pm.expect(expected).eql(usersData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "192.168.56.3:8080/api/v1/users?limit=2&offset=2",
					"host": [
						"192",
						"168",
						"56",
						"3"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"users"
					],
					"query": [
						{
							"key": "limit",
							"value": "2"
						},
						{
							"key": "offset",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user 1 tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expected = [\r",
							"  {\r",
							"    userId: 1,\r",
							"    taskId: 1,\r",
							"    description: 'Task 1',\r",
							"    hours: 0,\r",
							"    minutes: 0,\r",
							"    seconds: 0,\r",
							"    status: false\r",
							"  },\r",
							"  {\r",
							"    userId: 1,\r",
							"    taskId: 2,\r",
							"    description: 'Task 2',\r",
							"    hours: 0,\r",
							"    minutes: 0,\r",
							"    seconds: 0,\r",
							"    status: false\r",
							"  }\r",
							"]\r",
							"\r",
							"pm.test(pm.info.requestName, function () {\r",
							"    let userData = pm.response.json();\r",
							"    pm.expect(expected).eql(userData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "192.168.56.3:8080/api/v1/users/1?limit=55&offset=0",
					"host": [
						"192",
						"168",
						"56",
						"3"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"users",
						"1"
					],
					"query": [
						{
							"key": "limit",
							"value": "55"
						},
						{
							"key": "offset",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user 1 tasks with limit 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expected = [\r",
							"  {\r",
							"    userId: 1,\r",
							"    taskId: 1,\r",
							"    description: 'Task 1',\r",
							"    hours: 0,\r",
							"    minutes: 0,\r",
							"    seconds: 0,\r",
							"    status: false\r",
							"  }\r",
							"]\r",
							"\r",
							"pm.test(pm.info.requestName, function () {\r",
							"    let userData = pm.response.json();\r",
							"    pm.expect(expected).eql(userData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "192.168.56.3:8080/api/v1/users/1?limit=1&offset=0",
					"host": [
						"192",
						"168",
						"56",
						"3"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"users",
						"1"
					],
					"query": [
						{
							"key": "limit",
							"value": "1"
						},
						{
							"key": "offset",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user 2 tasks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let expected = [\r",
							"  {\r",
							"    userId: 2,\r",
							"    taskId: 3,\r",
							"    description: 'Task 3',\r",
							"    hours: 0,\r",
							"    minutes: 0,\r",
							"    seconds: 0,\r",
							"    status: false\r",
							"  },\r",
							"  {\r",
							"    userId: 2,\r",
							"    taskId: 4,\r",
							"    description: 'Task 4',\r",
							"    hours: 0,\r",
							"    minutes: 0,\r",
							"    seconds: 0,\r",
							"    status: false\r",
							"  }\r",
							"]\r",
							"\r",
							"pm.test(pm.info.requestName, function () {\r",
							"    let userData = pm.response.json();\r",
							"    pm.expect(expected).eql(userData);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "192.168.56.3:8080/api/v1/users/2?limit=2&offset=0",
					"host": [
						"192",
						"168",
						"56",
						"3"
					],
					"port": "8080",
					"path": [
						"api",
						"v1",
						"users",
						"2"
					],
					"query": [
						{
							"key": "limit",
							"value": "2"
						},
						{
							"key": "offset",
							"value": "0"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.test(\"Status code is 200\", function () {\r",
					"    pm.response.to.have.status(200);\r",
					"});"
				]
			}
		}
	]
}